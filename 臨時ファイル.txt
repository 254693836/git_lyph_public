TYPES: BEGIN OF ty_input,
         a TYPE char10,
         b TYPE char10,
         c TYPE char10,
         d TYPE p DECIMALS 2,
       END OF ty_input.

TYPES: BEGIN OF ty_result,
         a   TYPE char10,
         b   TYPE char10,
         c   TYPE char10,
         d1  TYPE p DECIMALS 2,
         d2  TYPE p DECIMALS 2,
         d3  TYPE p DECIMALS 2,
       END OF ty_result.

DATA: lt_input   TYPE STANDARD TABLE OF ty_input,
      lt_result  TYPE STANDARD TABLE OF ty_result,
      lt_tmp_d1  TYPE HASHED TABLE OF ty_result WITH UNIQUE KEY a b c,
      lt_tmp_d2  TYPE HASHED TABLE OF ty_result WITH UNIQUE KEY a b,
      lt_tmp_d3  TYPE HASHED TABLE OF ty_result WITH UNIQUE KEY a c,
      ls_input   TYPE ty_input,
      ls_result  TYPE ty_result.

" 示例数据
APPEND VALUE #( a = 'A1' b = 'B1' c = 'C1' d = '100.00' ) TO lt_input.
APPEND VALUE #( a = 'A1' b = 'B1' c = 'C1' d = '150.00' ) TO lt_input.
APPEND VALUE #( a = 'A1' b = 'B1' c = 'C2' d = '200.00' ) TO lt_input.
APPEND VALUE #( a = 'A1' b = 'B2' c = 'C1' d = '50.00' ) TO lt_input.
APPEND VALUE #( a = 'A2' b = 'B1' c = 'C1' d = '80.00' ) TO lt_input.

" Step 1: d1 = 按 a, b, c 分组
LOOP AT lt_input INTO ls_input.
  READ TABLE lt_tmp_d1 INTO ls_result WITH TABLE KEY a = ls_input-a b = ls_input-b c = ls_input-c.
  IF sy-subrc = 0.
    ls_result-d1 = ls_result-d1 + ls_input-d.
    MODIFY lt_tmp_d1 FROM ls_result.
  ELSE.
    CLEAR ls_result.
    ls_result-a  = ls_input-a.
    ls_result-b  = ls_input-b.
    ls_result-c  = ls_input-c.
    ls_result-d1 = ls_input-d.
    APPEND ls_result TO lt_tmp_d1.
  ENDIF.
ENDLOOP.

" Step 2: d2 = 按 a, b 分组，c保持空
LOOP AT lt_input INTO ls_input.
  READ TABLE lt_tmp_d2 INTO ls_result WITH TABLE KEY a = ls_input-a b = ls_input-b.
  IF sy-subrc = 0.
    ls_result-d2 = ls_result-d2 + ls_input-d.
    MODIFY lt_tmp_d2 FROM ls_result.
  ELSE.
    CLEAR ls_result.
    ls_result-a  = ls_input-a.
    ls_result-b  = ls_input-b.
    ls_result-d2 = ls_input-d.
    APPEND ls_result TO lt_tmp_d2.
  ENDIF.
ENDLOOP.

" Step 3: d3 = 按 a, c 分组，b保持空
LOOP AT lt_input INTO ls_input.
  READ TABLE lt_tmp_d3 INTO ls_result WITH TABLE KEY a = ls_input-a c = ls_input-c.
  IF sy-subrc = 0.
    ls_result-d3 = ls_result-d3 + ls_input-d.
    MODIFY lt_tmp_d3 FROM ls_result.
  ELSE.
    CLEAR ls_result.
    ls_result-a  = ls_input-a.
    ls_result-c  = ls_input-c.
    ls_result-d3 = ls_input-d.
    APPEND ls_result TO lt_tmp_d3.
  ENDIF.
ENDLOOP.

" 合并三张临时表为最终结果
LOOP AT lt_tmp_d1 INTO ls_result.
  " 取对应的 d2
  READ TABLE lt_tmp_d2 INTO DATA(ls_d2) WITH TABLE KEY a = ls_result-a b = ls_result-b.
  IF sy-subrc = 0.
    ls_result-d2 = ls_d2-d2.
  ENDIF.

  " 取对应的 d3
  READ TABLE lt_tmp_d3 INTO DATA(ls_d3) WITH TABLE KEY a = ls_result-a c = ls_result-c.
  IF sy-subrc = 0.
    ls_result-d3 = ls_d3-d3.
  ENDIF.

  APPEND ls_result TO lt_result.
ENDLOOP.

" 显示最终结果
cl_demo_output=>display( lt_result ).
